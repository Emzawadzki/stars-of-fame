{"version":3,"sources":["serviceWorker.js","store/actions/projectActions.js","store/reducers/languagesReducer.js","store/reducers/projectsReducer.js","store/reducers/rootReducer.js","components/common/Container.jsx","components/Header/Header.jsx","components/ProjectsList/Project.jsx","components/ProjectsList/ProjectsList.jsx","components/LangFilter/LangFilter.jsx","components/SinceFilter/SinceFilter.jsx","components/SortList/SortList.jsx","components/Main/Main.jsx","components/App.jsx","index.js","store/actions/langActions.js"],"names":["Boolean","window","location","hostname","match","fetchProjects","lang","since","url","langParam","sinceParams","Object","keys","map","el","filter","join","dispatch","type","loading","axios","get","then","response","projects","data","catch","error","console","warn","fetchProjectsError","initState","languages","languagesReducer","state","action","urlParams","localStorage","getItem","daily","weekly","monthly","sortBy","projectsReducer","param","property","rootReducer","combineReducers","proj","Container","children","className","Header","Project","project","href","target","rel","icon","currentPeriodStars","name","author","description","stars","forks","builtBy","user","i","key","src","avatar","alt","username","language","style","backgroundColor","languageColor","connect","sortedProjects","sort","a","b","Number","primary","activeLang","changeLanguage","setItem","getState","changeLanguageInterface","options","label","value","urlParam","currentOption","find","option","htmlFor","onChange","placeholder","styles","params","changeSince","changeSinceInterface","handleChange","e","getAttribute","defaultChecked","id","changeSortBy","classNamePrefix","App","library","add","fas","fab","store","createStore","applyMiddleware","thunk","popular","fetchLanguagesError","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b129d612.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\";\n\nexport function changeLanguageInterface(lang) {\n\treturn {\n\t\ttype: \"CHANGE_LANGUAGE\",\n\t\tlang\n\t};\n}\n\nexport function changeLanguage(lang) {\n\tlocalStorage.setItem(\"projectsLanguage\", lang);\n\n\treturn (dispatch, getState) => {\n\t\tdispatch(changeLanguageInterface(lang));\n\t\tdispatch(fetchProjects(getState().proj.urlParams));\n\t};\n}\n\nexport function changeSinceInterface(param) {\n\treturn {\n\t\ttype: \"CHANGE_SINCE\",\n\t\tparam\n\t};\n}\n\nexport function changeSince(param) {\n\tlocalStorage.setItem(`projectsSince_${param}`, !localStorage.getItem(`projectsSince_${param}` === \"true\"));\n\n\treturn (dispatch, getState) => {\n\t\tdispatch(changeSinceInterface(param));\n\t\tdispatch(fetchProjects(getState().proj.urlParams));\n\t};\n}\n\nexport function changeSortBy(property) {\n\tlocalStorage.setItem(\"projectsSortBy\", property);\n\n\treturn {\n\t\ttype: \"CHANGE_SORT_BY\",\n\t\tproperty\n\t};\n}\n\nexport function fetchProjectsBegin() {\n\treturn {\n\t\ttype: \"FETCH_PROJECTS_BEGIN\",\n\t\tloading: true\n\t};\n}\n\nexport function fetchProjectsSuccess(projects) {\n\treturn {\n\t\ttype: \"FETCH_PROJECTS_SUCCESS\",\n\t\tprojects,\n\t\tloading: false\n\t};\n}\n\nexport function fetchProjectsError(error) {\n\t// @TODO: errors handling\n\tconsole.warn(\"Fetch projects error:\");\n\tconsole.warn(error);\n\treturn {\n\t\ttype: \"FETCH_PROJECTS_ERROR\",\n\t\terror,\n\t\tloading: false\n\t};\n}\n\nexport function fetchProjects({ lang, since }) {\n\tlet url = \"https://github-trending-api.now.sh/repositories\";\n\tconst langParam = lang;\n\tconst sinceParams = Object.keys(since)\n\t\t.map(el => {\n\t\t\treturn since[el] ? el : null;\n\t\t})\n\t\t.filter(el => el)\n\t\t.join(\",\");\n\n\tif (langParam || sinceParams) {\n\t\turl +=\n\t\t\t\"?\" +\n\t\t\t[langParam ? \"language=\" + langParam : null, sinceParams ? \"since=\" + sinceParams : null]\n\t\t\t\t.filter(el => el)\n\t\t\t\t.join(\"&\");\n\t}\n\n\treturn dispatch => {\n\t\tdispatch(fetchProjectsBegin());\n\t\treturn axios\n\t\t\t.get(url)\n\t\t\t.then(response => {\n\t\t\t\tdispatch(fetchProjectsSuccess(response.data));\n\t\t\t\treturn response.data;\n\t\t\t})\n\t\t\t.catch(error => dispatch(fetchProjectsError(error)));\n\t};\n}\n","const initState = {\n\tloading: false,\n\terror: null,\n\tlanguages: []\n};\n\nconst languagesReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase 'FETCH_LANGUAGES_BEGIN':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\n\t\tcase 'FETCH_LANGUAGES_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tlanguages: action.languages\n\t\t\t};\n\n\t\tcase 'FETCH_LANGUAGES_ERROR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.error\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default languagesReducer;\n","const initState = {\n\tloading: false,\n\terror: null,\n\tprojects: [],\n\turlParams: {\n\t\tlang: localStorage.getItem(\"projectsLanguage\") || \"\",\n\t\tsince: {\n\t\t\tdaily: localStorage.getItem(\"projectsSince_daily\") === \"true\",\n\t\t\tweekly: localStorage.getItem(\"projectsSince_weekly\") === \"true\",\n\t\t\tmonthly: localStorage.getItem(\"projectsSince_monthly\") === \"true\"\n\t\t}\n\t},\n\tsortBy: localStorage.getItem(\"projectsSortBy\") || \"\"\n};\n\nconst projectsReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase \"CHANGE_LANGUAGE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\turlParams: {\n\t\t\t\t\t...state.urlParams,\n\t\t\t\t\tlang: action.lang\n\t\t\t\t}\n\t\t\t};\n\n\t\tcase \"CHANGE_SINCE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\turlParams: {\n\t\t\t\t\t...state.urlParams,\n\t\t\t\t\tsince: {\n\t\t\t\t\t\t...state.urlParams.since,\n\t\t\t\t\t\t[action.param]: !state.urlParams.since[action.param]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\tcase \"CHANGE_SORT_BY\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsortBy: action.property\n\t\t\t};\n\n\t\tcase \"FETCH_PROJECTS_BEGIN\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\n\t\tcase \"FETCH_PROJECTS_SUCCESS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprojects: action.projects,\n\t\t\t\tloading: false\n\t\t\t};\n\n\t\tcase \"FETCH_PROJECTS_ERROR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.error,\n\t\t\t\tloading: false\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default projectsReducer;\n","import { combineReducers } from \"redux\";\n\nimport languagesReducer from \"./languagesReducer\";\nimport projectsReducer from \"./projectsReducer\";\n\nconst rootReducer = combineReducers({\n\tlang: languagesReducer,\n\tproj: projectsReducer\n});\n\nexport default rootReducer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst propTypes = {\n\tloading: PropTypes.bool\n};\n\nconst Container = ({ children, loading }) => (\n\t<div className={`container${loading ? \" container--loading\" : \"\"}`}>\n\t\t{children}\n\t\t{loading ? <div className=\"container__spinner\" /> : null}\n\t</div>\n);\n\nContainer.propTypes = propTypes;\n\nexport default Container;\n","import React from \"react\";\n\nimport Container from \"../common/Container\";\n\nconst Header = () => {\n\treturn (\n\t\t<header className=\"header\">\n\t\t\t<Container>\n\t\t\t\t<h1 className=\"header__brand\">\n\t\t\t\t\tStars<span className=\"header__distinction\">Of</span>Fame\n\t\t\t\t</h1>\n\t\t\t</Container>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst propTypes = {\n\tproject: PropTypes.shape({\n\t\tauthor: PropTypes.string.isRequired,\n\t\tbuiltBy: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tavatar: PropTypes.string.isRequired,\n\t\t\t\thref: PropTypes.string.isRequired,\n\t\t\t\tusername: PropTypes.string.isRequired\n\t\t\t})\n\t\t).isRequired,\n\t\tcurrentPeriodStars: PropTypes.number.isRequired,\n\t\tdescription: PropTypes.string.isRequired,\n\t\tforks: PropTypes.number.isRequired,\n\t\tlanguage: PropTypes.string,\n\t\tlanguageColor: PropTypes.string,\n\t\tname: PropTypes.string.isRequired,\n\t\tstars: PropTypes.number.isRequired,\n\t\turl: PropTypes.string.isRequired\n\t}).isRequired\n};\n\nconst Project = ({ project }) => {\n\treturn (\n\t\t<li className=\"project\">\n\t\t\t<div className=\"project__inner\">\n\t\t\t\t<a className=\"project__url\" href={project.url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t<span className=\"hidden\">See on github</span>\n\t\t\t\t\t<FontAwesomeIcon icon={[\"fab\", \"github\"]} />\n\t\t\t\t</a>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"project__cps-icon\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={[\"fas\", \"star\"]} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"project__cps\">\n\t\t\t\t\t\t<span className=\"hidden\">Current period stars:</span>\n\t\t\t\t\t\t{project.currentPeriodStars}\n\t\t\t\t\t</div>\n\t\t\t\t\t<h3 className=\"project__name\">{project.name}</h3>\n\t\t\t\t\t<p className=\"project__author\">by {project.author}</p>\n\t\t\t\t\t<div className=\"project__description\">{project.description}</div>\n\t\t\t\t\t<div className=\"project__property\">\n\t\t\t\t\t\tOverall stars: {project.stars}\n\t\t\t\t\t\t<span className=\"project__property-icon project__property-icon--orange\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={[\"fas\", \"star\"]} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"project__property\">\n\t\t\t\t\t\tForks: {project.forks}\n\t\t\t\t\t\t<span className=\"project__property-icon\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={[\"fas\", \"code-branch\"]} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"project__contributors\">\n\t\t\t\t\t\tBuilt by:\n\t\t\t\t\t\t<ul className=\"project__contributors-list\">\n\t\t\t\t\t\t\t{project.builtBy.map((user, i) => (\n\t\t\t\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclassName=\"project__contributor\"\n\t\t\t\t\t\t\t\t\t\thref={user.href}\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img src={user.avatar} alt={user.username} />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{project.language ? (\n\t\t\t\t\t<div className=\"project__language\" style={{ backgroundColor: project.languageColor }}>\n\t\t\t\t\t\t{project.language}\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nProject.propTypes = propTypes;\n\nexport default Project;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport Project from \"./Project\";\n\nconst propTypes = {\n\tprojects: PropTypes.array.isRequired,\n\tsortBy: PropTypes.string.isRequired\n};\n\nconst ProjectsList = ({ projects, sortBy }) => {\n\tlet sortedProjects = [...projects];\n\n\tif (sortBy) {\n\t\tsortedProjects.sort((a, b) => Number(b[sortBy]) - Number(a[sortBy]));\n\t}\n\n\treturn (\n\t\t<ul className=\"projects-list\">\n\t\t\t{sortedProjects.map((project, i) => (\n\t\t\t\t<Project key={i} primary={i === 0} project={project} />\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nconst mapStateToProps = ({ proj }) => {\n\treturn {\n\t\tprojects: proj.projects,\n\t\tsortBy: proj.sortBy\n\t};\n};\n\nProjectsList.propTypes = propTypes;\n\nexport default connect(mapStateToProps)(ProjectsList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\n\nimport { changeLanguage } from \"../../store/actions/projectActions\";\n\nconst propTypes = {\n\tchangeLanguage: PropTypes.func.isRequired,\n\tlanguages: PropTypes.array.isRequired,\n\tactiveLang: PropTypes.string\n};\n\nconst LangFilter = ({ changeLanguage, languages, activeLang }) => {\n\tconst handleChange = option => {\n\t\tchangeLanguage(option.value);\n\t};\n\n\tconst options = [\n\t\t{\n\t\t\tlabel: \"All\",\n\t\t\tvalue: \"\"\n\t\t},\n\t\t...languages.map(lang => {\n\t\t\treturn {\n\t\t\t\tlabel: lang.name,\n\t\t\t\tvalue: lang.urlParam\n\t\t\t};\n\t\t})\n\t];\n\n\tconst currentOption = options.find(option => option.value === activeLang);\n\n\treturn (\n\t\t<label htmlFor=\"language\" className=\"select\">\n\t\t\t<span className=\"select__label\">Language:</span>\n\t\t\t<Select\n\t\t\t\tname=\"language\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\toptions={options}\n\t\t\t\tplaceholder=\"Select language\"\n\t\t\t\tvalue={currentOption}\n\t\t\t\tstyles={{}}\n\t\t\t/>\n\t\t</label>\n\t);\n};\n\nconst mapStateToProps = ({ lang, proj }) => {\n\treturn {\n\t\tlanguages: lang.languages,\n\t\tactiveLang: proj.urlParams.lang\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tchangeLanguage: lang => dispatch(changeLanguage(lang))\n\t};\n};\n\nLangFilter.propTypes = propTypes;\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(LangFilter);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { changeSince } from \"../../store/actions/projectActions\";\n\nconst propTypes = {\n\tchangeSince: PropTypes.func.isRequired,\n\tparams: PropTypes.object.isRequired\n};\n\nconst SinceFilter = ({ changeSince, params }) => {\n\tconst handleChange = e => {\n\t\tchangeSince(e.target.getAttribute(\"name\"));\n\t};\n\n\treturn (\n\t\t<div className=\"check-list\">\n\t\t\t<span className=\"check-list__name\">Projects since:</span>\n\t\t\t{Object.keys(params).map(key => (\n\t\t\t\t<div className=\"check-list__item\" key={key}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"check-list__input\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname={key}\n\t\t\t\t\t\tdefaultChecked={params[key]}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tid={`since-${key}`}\n\t\t\t\t\t/>\n\t\t\t\t\t<label className=\"check-list__label\" htmlFor={`since-${key}`}>\n\t\t\t\t\t\t{key}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = ({ proj }) => {\n\treturn {\n\t\tparams: proj.urlParams.since\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tchangeSince: param => dispatch(changeSince(param))\n\t};\n};\n\nSinceFilter.propTypes = propTypes;\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(SinceFilter);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\n\nimport { changeSortBy } from \"../../store/actions/projectActions\";\n\nconst propTypes = {\n\tchangeSortBy: PropTypes.func.isRequired,\n\tsortBy: PropTypes.string\n};\n\nconst SortList = ({ changeSortBy, sortBy }) => {\n\tconst handleChange = option => {\n\t\tchangeSortBy(option.value);\n\t};\n\n\tconst options = [\n\t\t{\n\t\t\tvalue: \"\",\n\t\t\tlabel: \"none\"\n\t\t},\n\t\t{\n\t\t\tvalue: \"currentPeriodStars\",\n\t\t\tlabel: \"Current period stars\"\n\t\t},\n\t\t{\n\t\t\tvalue: \"stars\",\n\t\t\tlabel: \"Overall stars\"\n\t\t},\n\t\t{\n\t\t\tvalue: \"forks\",\n\t\t\tlabel: \"Forks\"\n\t\t}\n\t];\n\n\tconst currentOption = options.find(option => option.value === sortBy);\n\n\treturn (\n\t\t<label htmlFor=\"sort-by\" className=\"select\">\n\t\t\t<span className=\"select__label\">Sort by:</span>\n\t\t\t<Select\n\t\t\t\tclassName=\"select\"\n\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\tname=\"sort-by\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\toptions={options}\n\t\t\t\tplaceholder=\"Sort by\"\n\t\t\t\tvalue={currentOption}\n\t\t\t/>\n\t\t</label>\n\t);\n};\n\nSortList.propTypes = propTypes;\n\nconst mapStateToProps = ({ lang, proj }) => {\n\treturn {\n\t\tsortBy: proj.sortBy\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tchangeSortBy: property => dispatch(changeSortBy(property))\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(SortList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport Container from \"../common/Container\";\nimport ProjectsList from \"../ProjectsList/ProjectsList\";\nimport LangFilter from \"../LangFilter/LangFilter\";\nimport SinceFilter from \"../SinceFilter/SinceFilter\";\nimport SortList from \"../SortList/SortList\";\n\nconst propTypes = {\n\tloading: PropTypes.bool.isRequired\n};\n\nconst Main = ({ loading }) => {\n\treturn (\n\t\t<main className=\"main\">\n\t\t\t<Container>\n\t\t\t\t<h2 className=\"main__title\">Most starred projects</h2>\n\t\t\t\t<div className=\"main__filters\">\n\t\t\t\t\t<div className=\"main__filter\">\n\t\t\t\t\t\t<LangFilter />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"main__filter\">\n\t\t\t\t\t\t<SortList />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"main__filter main__filter--wide\">\n\t\t\t\t\t\t<SinceFilter />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t\t<Container loading={loading}>\n\t\t\t\t<ProjectsList />\n\t\t\t</Container>\n\t\t</main>\n\t);\n};\n\nconst mapStateToProps = ({ proj }) => {\n\treturn {\n\t\tloading: proj.loading\n\t};\n};\n\nMain.propTypes = propTypes;\n\nexport default connect(mapStateToProps)(Main);\n","import React from \"react\";\n\nimport Header from \"../components/Header/Header\";\nimport Main from \"../components/Main/Main\";\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"layout\">\n\t\t\t<Header />\n\t\t\t<Main />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./styles/index.scss\";\n\nimport { fetchLanguages } from \"./store/actions/langActions\";\nimport { fetchProjects } from \"./store/actions/projectActions\";\n\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport App from \"./components/App\";\n\nlibrary.add(fas, fab);\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nstore.dispatch(fetchLanguages()).then(store.dispatch(fetchProjects(store.getState().proj.urlParams)));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"app\")\n);\n\nserviceWorker.unregister();\n","import axios from \"axios\";\n\nexport function fetchLanguagesBegin() {\n\treturn {\n\t\ttype: \"FETCH_LANGUAGES_BEGIN\"\n\t};\n}\n\nexport function fetchLanguagesSuccess(languages) {\n\treturn {\n\t\ttype: \"FETCH_LANGUAGES_SUCCESS\",\n\t\tlanguages\n\t};\n}\n\nexport function fetchLanguagesError(error) {\n\t// @TODO: errors handling\n\tconsole.warn(\"Fetch languages error:\");\n\tconsole.warn(error);\n\treturn {\n\t\ttype: \"FETCH_LANGUAGES_ERROR\",\n\t\terror\n\t};\n}\n\nexport function fetchLanguages() {\n\treturn dispatch => {\n\t\tdispatch(fetchLanguagesBegin());\n\t\treturn axios\n\t\t\t.get(\"https://github-trending-api.now.sh/languages\")\n\t\t\t.then(response => {\n\t\t\t\tdispatch(fetchLanguagesSuccess(response.data.popular));\n\t\t\t\treturn response.data;\n\t\t\t})\n\t\t\t.catch(error => dispatch(fetchLanguagesError(error)));\n\t};\n}\n"],"sourceRoot":""}